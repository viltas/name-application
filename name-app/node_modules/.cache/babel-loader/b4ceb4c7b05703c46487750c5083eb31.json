{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/villetaskinen/Desktop/names/names-app/src/nameTable.js\";\nimport React from 'react';\nimport { Grid, Card, Button, withStyles, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TableSortLabel } from '@material-ui/core';\nimport data from './resources/names';\nconst useStyles = makeStyles({\n  table: {\n    width: \"50%\"\n  },\n  card: {\n    background: \"white\",\n    width: \"50%\"\n  },\n  container: {\n    height: 440\n  },\n  button: {\n    padding: '30px'\n  }\n});\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nexport const NameTable = () => {\n  const classes = useStyles;\n  const names = data.names;\n  const totalAmount = 100;\n  console.log(names[0]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.card,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          variant: \"outlined\",\n          color: \"primary\",\n          children: \"Order by name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          variant: \"outlined\",\n          color: \"primary\",\n          disabled: !false,\n          children: \"Order by amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [names.map((s, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: s.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: s.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"right\",\n                children: totalAmount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 13\n  }, this);\n};\n_c = NameTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"NameTable\");","map":{"version":3,"sources":["/Users/villetaskinen/Desktop/names/names-app/src/nameTable.js"],"names":["React","Grid","Card","Button","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TableSortLabel","data","useStyles","table","width","card","background","container","height","button","padding","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","NameTable","classes","names","totalAmount","console","log","map","s","i","name","amount"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,IADJ,EACUC,IADV,EACgBC,MADhB,EACwBC,UADxB,EACoCC,UADpC,EACgDC,KADhD,EACuDC,SADvD,EACkEC,SADlE,EAEIC,cAFJ,EAEoBC,SAFpB,EAE+BC,QAF/B,EAEyCC,cAFzC,QAGO,mBAHP;AAIA,OAAOC,IAAP,MAAiB,mBAAjB;AAGA,MAAMC,SAAS,GAAGT,UAAU,CAAC;AACzBU,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE;AADJ,GADkB;AAIzBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,OADV;AAEFF,IAAAA,KAAK,EAAE;AAFL,GAJmB;AAQzBG,EAAAA,SAAS,EAAE;AACPC,IAAAA,MAAM,EAAE;AADD,GARc;AAWzBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL;AAXiB,CAAD,CAA5B;AAgBA,MAAMC,eAAe,GAAGnB,UAAU,CAAEoB,KAAD,KAAY;AAC3CC,EAAAA,IAAI,EAAE;AACFC,IAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBC,KADpC;AAEFC,IAAAA,KAAK,EAAEN,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBG;AAF1B,GADqC;AAK3CC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR;AALqC,CAAZ,CAAD,CAAV,CAQpBzB,SARoB,CAAxB;AAUA,OAAO,MAAM0B,SAAS,GAAG,MAAM;AAE3B,QAAMC,OAAO,GAAGrB,SAAhB;AAEA,QAAMsB,KAAK,GAAGvB,IAAI,CAACuB,KAAnB;AAEA,QAAMC,WAAW,GAAG,GAApB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAAC,CAAD,CAAjB;AAEA,sBAIQ,QAAC,IAAD;AAAM,IAAA,SAAS,EAAED,OAAO,CAAClB,IAAzB;AAAA,2BACI,QAAC,IAAD;AACd,MAAA,SAAS,MADK;AAEd,MAAA,SAAS,EAAC,KAFI;AAGd,MAAA,OAAO,EAAC,QAHM;AAId,MAAA,UAAU,EAAC,QAJG;AAKd,MAAA,OAAO,EAAE,CALK;AAAA,8BAOhB,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,IAAI,MAApB;AAAqB,QAAA,EAAE,EAAE,CAAzB;AAAA,+BACgB,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAEkB,OAAO,CAACd,MAA3B;AAAmC,UAAA,OAAO,EAAC,UAA3C;AAAsD,UAAA,KAAK,EAAC,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADhB;AAAA;AAAA;AAAA;AAAA,cAPgB,eAWL,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,IAAI,MAApB;AAAqB,QAAA,EAAE,EAAE,CAAzB;AAAA,+BACK,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAEc,OAAO,CAACd,MAA3B;AAAmC,UAAA,OAAO,EAAC,UAA3C;AAAsD,UAAA,KAAK,EAAC,SAA5D;AAAsE,UAAA,QAAQ,EAAE,CAAC,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,cAXK,eAmBA,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAEc,OAAO,CAAChB,SAAnC;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEgB,OAAO,CAACpB,KAA1B;AAAiC,wBAAW,cAA5C;AAAA,kCACI,QAAC,SAAD;AAAA,mCACI,QAAC,QAAD;AAAA,sCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI,QAAC,SAAD;AAAA,uBACKqB,KAAK,CAACI,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,kBACP,QAAC,QAAD;AAAA,sCACI,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAC,IAArB;AAA0B,gBAAA,KAAK,EAAC,KAAhC;AAAA,0BACKD,CAAC,CAACE;AADP;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,OAAjB;AAAA,0BAA0BF,CAAC,CAACG;AAA5B;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA,eAAeF,CAAf;AAAA;AAAA;AAAA;AAAA,oBADH,CADL,eASI,QAAC,QAAD;AAAA,sCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAC,OAAvB;AAAA,0BAAgCL;AAAhC;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAJR;AAqDH,CA/DM;KAAMH,S","sourcesContent":["import React from 'react'\nimport {\n    Grid, Card, Button, withStyles, makeStyles, Table, TableBody, TableCell,\n    TableContainer, TableHead, TableRow, TableSortLabel\n} from '@material-ui/core';\nimport data from './resources/names'\n\n\nconst useStyles = makeStyles({\n    table: {\n        width: \"50%\",\n    },\n    card: {\n        background: \"white\",\n        width: \"50%\",\n    },\n    container: {\n        height: 440,\n      },\n    button: {    \n        padding: '30px',   \n      },\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nexport const NameTable = () => {\n\n    const classes = useStyles;\n\n    const names = data.names;\n\n    const totalAmount = 100;\n\n    console.log(names[0]);\n\n    return (\n\n        \n\n            <Card className={classes.card}>\n                <Grid\n  container\n  direction=\"row\"\n  justify=\"center\"\n  alignItems=\"center\"\n  spacing={3}\n>\n<Grid container item xs={6}>\n                <Button className={classes.button} variant=\"outlined\" color=\"primary\">\n                    Order by name\n    </Button>\n    </Grid><Grid container item xs={6}>\n                <Button className={classes.button} variant=\"outlined\" color=\"primary\" disabled={!false}>\n                    Order by amount\n    </Button>\n    </Grid>\n\n    \n\n                <TableContainer className={classes.container}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell>Name</StyledTableCell>\n                                <StyledTableCell align=\"right\">Amount</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {names.map((s, i) => (\n                                <TableRow key={i}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {s.name}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{s.amount}</TableCell>\n                                </TableRow>\n                            ))}\n                            <TableRow>\n                                <StyledTableCell>Total</StyledTableCell>\n                                <StyledTableCell align=\"right\">{totalAmount}</StyledTableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                </Grid>\n            </Card>\n           \n      \n    );\n};"]},"metadata":{},"sourceType":"module"}