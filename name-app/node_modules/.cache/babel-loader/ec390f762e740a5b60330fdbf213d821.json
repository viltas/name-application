{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/villetaskinen/Desktop/names/names-app/src/nameTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, Grid, Card, Button, withStyles, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Typography, TableSortLabel } from '@material-ui/core';\nimport data from './resources/names';\nconst useStyles = makeStyles({\n  table: {\n    width: \"50%\"\n  },\n  card: {\n    background: \"white\",\n    width: \"50%\",\n    height: \"50%\"\n  },\n  container: {\n    width: 500\n  },\n  button: {\n    padding: '30px'\n  }\n});\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: '#0f9dc3',\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nexport const NameTable = () => {\n  _s();\n\n  const classes = useStyles;\n  const names = data.names;\n  var [orderBy, setOrderBy] = useState(\"amount\");\n  var total = 0;\n\n  const sortNames = () => {\n    if (orderBy = \"name\") {\n      names.sort((a, b) => a.name > b.name ? 1 : -1);\n    } else {\n      names.sort((a, b) => a.amount < b.amount ? 1 : -1);\n    }\n  };\n\n  const countTotal = () => {\n    for (var i = 0; i < names.length; i++) {\n      total += names[i].amount;\n    }\n  };\n\n  const handleSort = () => {\n    if (orderBy === \"asdas\") {\n      setOrderBy(\"amount\");\n      console.log(orderBy + \"aaa\");\n      sortNames();\n    } else {\n      console.log(orderBy);\n      sortNames();\n    }\n  };\n\n  sortNames();\n  countTotal();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    m: 1,\n    p: 1,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      width: \"50%\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.card,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          m: 1,\n          p: 1,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h2\",\n            children: \"Name Application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          m: 1,\n          p: 1,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sodales feugiat nibh et elementum. Suspendisse eu porttitor urna. Fusce ullamcorper turpis diam, vel gravida elit sagittis bibendum. Vestibulum scelerisque sem at condimentum ultrices.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"filled\",\n          label: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          className: classes.container,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: classes.table,\n            \"aria-label\": \"simple table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                    active: orderBy === \"name\",\n                    onClick: handleSort,\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  align: \"right\",\n                  children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                    active: orderBy === \"Amount\",\n                    onClick: handleSort,\n                    children: \"Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 64\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [names.map((s, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: s.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: s.amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 37\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  children: \"Total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  align: \"right\",\n                  children: total\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NameTable, \"hzL5Kf0D7rHuSXe6Bxvo5TBVMjg=\");\n\n_c = NameTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"NameTable\");","map":{"version":3,"sources":["/Users/villetaskinen/Desktop/names/names-app/src/nameTable.js"],"names":["React","useState","Box","Grid","Card","Button","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","Typography","TableSortLabel","data","useStyles","table","width","card","background","height","container","button","padding","StyledTableCell","theme","head","backgroundColor","color","palette","common","white","body","fontSize","NameTable","classes","names","orderBy","setOrderBy","total","sortNames","sort","a","b","name","amount","countTotal","i","length","handleSort","console","log","map","s"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACIC,GADJ,EACSC,IADT,EACeC,IADf,EACqBC,MADrB,EAC6BC,UAD7B,EACyCC,UADzC,EACqDC,KADrD,EAC4DC,SAD5D,EACuEC,SADvE,EAEIC,cAFJ,EAEoBC,SAFpB,EAE+BC,QAF/B,EAEyCC,SAFzC,EAEoDC,UAFpD,EAEgEC,cAFhE,QAGO,mBAHP;AAIA,OAAOC,IAAP,MAAiB,mBAAjB;AAGA,MAAMC,SAAS,GAAGX,UAAU,CAAC;AACzBY,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE;AADJ,GADkB;AAIzBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,OADV;AAEFF,IAAAA,KAAK,EAAE,KAFL;AAGFG,IAAAA,MAAM,EAAE;AAHN,GAJmB;AASzBC,EAAAA,SAAS,EAAE;AACPJ,IAAAA,KAAK,EAAE;AADA,GATc;AAYzBK,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL;AAZiB,CAAD,CAA5B;AAiBA,MAAMC,eAAe,GAAGrB,UAAU,CAAEsB,KAAD,KAAY;AAC3CC,EAAAA,IAAI,EAAE;AACFC,IAAAA,eAAe,EAAE,SADf;AAEFC,IAAAA,KAAK,EAAEH,KAAK,CAACI,OAAN,CAAcC,MAAd,CAAqBC;AAF1B,GADqC;AAK3CC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR;AALqC,CAAZ,CAAD,CAAV,CAQpB1B,SARoB,CAAxB;AAUA,OAAO,MAAM2B,SAAS,GAAG,MAAM;AAAA;;AAE3B,QAAMC,OAAO,GAAGpB,SAAhB;AAEA,QAAMqB,KAAK,GAAGtB,IAAI,CAACsB,KAAnB;AAEA,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBxC,QAAQ,CAAC,QAAD,CAApC;AAGA,MAAIyC,KAAK,GAAG,CAAZ;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACpB,QAAIH,OAAO,GAAG,MAAd,EAAsB;AAClBD,MAAAA,KAAK,CAACK,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAZ,GAAoB,CAApB,GAAwB,CAAC,CAA9C;AACH,KAFD,MAGK;AACDR,MAAAA,KAAK,CAACK,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACG,MAAF,GAAWF,CAAC,CAACE,MAAd,GAAwB,CAAxB,GAA4B,CAAC,CAAlD;AAEH;AACJ,GARD;;AAWA,QAAMC,UAAU,GAAG,MAAM;AACrB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,KAAK,CAACY,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnCR,MAAAA,KAAK,IAAIH,KAAK,CAACW,CAAD,CAAL,CAASF,MAAlB;AACH;AACJ,GAJD;;AAMA,QAAMI,UAAU,GAAG,MAAM;AACrB,QAAIZ,OAAO,KAAK,OAAhB,EAAyB;AACrBC,MAAAA,UAAU,CAAC,QAAD,CAAV;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYd,OAAO,GAAG,KAAtB;AACAG,MAAAA,SAAS;AACZ,KAJD,MAKH;AAEOU,MAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AACAG,MAAAA,SAAS;AACZ;AACJ,GAXD;;AAgBJA,EAAAA,SAAS;AACTM,EAAAA,UAAU;AAEV,sBAEI,QAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,cAAc,EAAC,QAAnC;AAA4C,IAAA,CAAC,EAAE,CAA/C;AAAkD,IAAA,CAAC,EAAE,CAArD;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEX,OAAO,CAACjB,IAAzB;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,OAAO,EAAC,MAAb;AAAoB,UAAA,cAAc,EAAC,QAAnC;AAA4C,UAAA,CAAC,EAAE,CAA/C;AAAkD,UAAA,CAAC,EAAE,CAArD;AAAA,iCAEI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAIU,QAAC,GAAD;AAAK,UAAA,OAAO,EAAC,MAAb;AAAoB,UAAA,cAAc,EAAC,QAAnC;AAA4C,UAAA,CAAC,EAAE,CAA/C;AAAkD,UAAA,CAAC,EAAE,CAArD;AAAA,iCACF,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,gBAJV,eASI;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,QAAnB;AAA4B,UAAA,KAAK,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAeI,QAAC,cAAD;AAAgB,UAAA,SAAS,EAAEiB,OAAO,CAACd,SAAnC;AAAA,iCACI,QAAC,KAAD;AAAO,YAAA,SAAS,EAAEc,OAAO,CAACnB,KAA1B;AAAiC,0BAAW,cAA5C;AAAA,oCACI,QAAC,SAAD;AAAA,qCACI,QAAC,QAAD;AAAA,wCACI,QAAC,eAAD;AAAA,yCAGI,QAAC,cAAD;AACI,oBAAA,MAAM,EAAEqB,OAAO,KAAK,MADxB;AAEI,oBAAA,OAAO,EAAEY,UAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAUI,QAAC,eAAD;AAAiB,kBAAA,KAAK,EAAC,OAAvB;AAAA,yCAA+B,QAAC,cAAD;AAC3B,oBAAA,MAAM,EAAEZ,OAAO,KAAK,QADO;AAE3B,oBAAA,OAAO,EAAEY,UAFkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,wBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAoBI,QAAC,SAAD;AAAA,yBACKb,KAAK,CAACgB,GAAN,CAAU,CAACC,CAAD,EAAIN,CAAJ,kBACP,QAAC,QAAD;AAAA,wCACI,QAAC,SAAD;AAAW,kBAAA,SAAS,EAAC,IAArB;AAA0B,kBAAA,KAAK,EAAC,KAAhC;AAAA,4BACKM,CAAC,CAACT;AADP;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII,QAAC,SAAD;AAAW,kBAAA,KAAK,EAAC,OAAjB;AAAA,4BAA0BS,CAAC,CAACR;AAA5B;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA,iBAAeE,CAAf;AAAA;AAAA;AAAA;AAAA,sBADH,CADL,eASI,QAAC,QAAD;AAAA,wCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,eAAD;AAAiB,kBAAA,KAAK,EAAC,OAAvB;AAAA,4BAAgCR;AAAhC;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AA6DC,CA5GM;;GAAML,S;;KAAAA,S","sourcesContent":["import React, { useState } from 'react'\nimport {\n    Box, Grid, Card, Button, withStyles, makeStyles, Table, TableBody, TableCell,\n    TableContainer, TableHead, TableRow, TextField, Typography, TableSortLabel\n} from '@material-ui/core';\nimport data from './resources/names'\n\n\nconst useStyles = makeStyles({\n    table: {\n        width: \"50%\",\n    },\n    card: {\n        background: \"white\",\n        width: \"50%\",\n        height: \"50%\",\n    },\n    container: {\n        width: 500,\n    },\n    button: {\n        padding: '30px',\n    },\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: '#0f9dc3',\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nexport const NameTable = () => {\n\n    const classes = useStyles;\n\n    const names = data.names;\n\n    var [orderBy, setOrderBy] = useState(\"amount\");\n\n\n    var total = 0;\n\n    const sortNames = () => {\n        if (orderBy = \"name\") {\n            names.sort((a, b) => (a.name > b.name) ? 1 : -1)\n        }\n        else {\n            names.sort((a, b) => (a.amount < b.amount) ? 1 : -1)\n\n        }\n    }\n\n\n    const countTotal = () => {\n        for (var i = 0; i < names.length; i++) {\n            total += names[i].amount;\n        }\n    }\n\n    const handleSort = () => {\n        if (orderBy === \"asdas\") {\n            setOrderBy(\"amount\");\n            console.log(orderBy + \"aaa\");\n            sortNames();\n        }\nelse {\n            \n            console.log(orderBy);\n            sortNames();\n        }\n    }\n\n\n\n\nsortNames();\ncountTotal();\n\nreturn (\n\n    <Box display=\"flex\" justifyContent=\"center\" m={1} p={1}>\n        <Box width=\"50%\">\n            <Card className={classes.card}>\n                <Box display=\"flex\" justifyContent=\"center\" m={1} p={1}>\n\n                    <Typography variant=\"h2\">Name Application</Typography>\n                </Box><Box display=\"flex\" justifyContent=\"center\" m={1} p={1}>\n                    <Typography variant=\"subtitle2\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sodales feugiat nibh et elementum. Suspendisse eu porttitor urna. Fusce ullamcorper turpis diam, vel gravida elit sagittis bibendum. Vestibulum scelerisque sem at condimentum ultrices.\n</Typography>\n                </Box>\n\n                <br />\n                <TextField variant=\"filled\" label=\"Search\" />\n\n\n\n\n                <TableContainer className={classes.container}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell>\n\n\n                                    <TableSortLabel\n                                        active={orderBy === \"name\"}\n                                        onClick={handleSort}>\n                                        Name\n                                                </TableSortLabel>\n                                </StyledTableCell>\n                                <StyledTableCell align=\"right\"><TableSortLabel\n                                    active={orderBy === \"Amount\"}\n                                    onClick={handleSort}>\n                                    Amount\n                                        </TableSortLabel>\n                                </StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {names.map((s, i) => (\n                                <TableRow key={i}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {s.name}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{s.amount}</TableCell>\n                                </TableRow>\n                            ))}\n                            <TableRow>\n                                <StyledTableCell>Total</StyledTableCell>\n                                <StyledTableCell align=\"right\">{total}</StyledTableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n            </Card>\n        </Box></Box>\n\n);\n};"]},"metadata":{},"sourceType":"module"}