{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/villetaskinen/Desktop/names/names-app/src/nameTable.js\";\nimport React from 'react';\nimport { Paper, Button, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TableSortLabel } from '@material-ui/core';\nimport { sizing } from '@material-ui/system';\nimport data from './resources/names';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  },\n  paper: {\n    background: \"white\",\n    padding: \"20px 30px\",\n    margin: \"0px 0px 50px 0px\",\n    width: \"700\"\n  }\n});\nexport const NameTable = () => {\n  const classes = useStyles;\n  const names = data.names;\n  console.log(names[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Name Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: names.map((s, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: s.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: s.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Order by name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Order by amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_c = NameTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"NameTable\");","map":{"version":3,"sources":["/Users/villetaskinen/Desktop/names/names-app/src/nameTable.js"],"names":["React","Paper","Button","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TableSortLabel","sizing","data","useStyles","table","minWidth","paper","background","padding","margin","width","NameTable","classes","names","console","log","map","s","i","name","amount"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,KADJ,EACWC,MADX,EACmBC,UADnB,EAC+BC,KAD/B,EACsCC,SADtC,EACiDC,SADjD,EAEIC,cAFJ,EAEoBC,SAFpB,EAE+BC,QAF/B,EAEyCC,cAFzC,QAGO,mBAHP;AAIA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAGA,MAAMC,SAAS,GAAGV,UAAU,CAAC;AACzBW,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE;AADP,GADkB;AAIzBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,UAAU,EAAE,OADT;AAEHC,IAAAA,OAAO,EAAE,WAFN;AAGHC,IAAAA,MAAM,EAAE,kBAHL;AAIHC,IAAAA,KAAK,EAAE;AAJJ;AAJkB,CAAD,CAA5B;AAYA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAE3B,QAAMC,OAAO,GAAGT,SAAhB;AAEA,QAAMU,KAAK,GAAGX,IAAI,CAACW,KAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAAC,CAAD,CAAjB;AAEA,sBAEI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAED,OAAO,CAACN,KAA1B;AAAA,8BAEI,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAEf,KAA3B;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEqB,OAAO,CAACR,KAA1B;AAAiC,wBAAW,cAA5C;AAAA,kCACI,QAAC,SAAD;AAAA,mCACI,QAAC,QAAD;AAAA,sCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI,QAAC,SAAD;AAAA,sBACKS,KAAK,CAACG,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,kBACP,QAAC,QAAD;AAAA,sCACI,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAC,IAArB;AAA0B,gBAAA,KAAK,EAAC,KAAhC;AAAA,0BACKD,CAAC,CAACE;AADP;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,OAAjB;AAAA,0BAA0BF,CAAC,CAACG;AAA5B;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA,eAAeF,CAAf;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAuBI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ,eA0BR,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BQ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAqCH,CA7CM;KAAMP,S","sourcesContent":["import React from 'react'\nimport {\n    Paper, Button, makeStyles, Table, TableBody, TableCell,\n    TableContainer, TableHead, TableRow, TableSortLabel\n} from '@material-ui/core';\nimport { sizing } from '@material-ui/system';\nimport data from './resources/names'\n\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n    paper: {\n        background: \"white\",\n        padding: \"20px 30px\",\n        margin: \"0px 0px 50px 0px\",\n        width: \"700\",\n      },\n});\n\nexport const NameTable = () => {\n\n    const classes = useStyles;\n\n    const names = data.names;\n\n    console.log(names[0]);\n\n    return (\n\n        <div>\n            <p>Name Application</p>\n\n            <Paper className={classes.paper}>\n\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Name</TableCell>\n                                <TableCell align=\"right\">Amount</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {names.map((s, i) => (\n                                <TableRow key={i}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {s.name}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{s.amount}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n                <Button variant=\"contained\" color=\"primary\">\n                    Order by name\n    </Button>\n    <Button variant=\"contained\" color=\"primary\">\n                    Order by amount\n    </Button>\n            </Paper>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}