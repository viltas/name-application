{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/villetaskinen/Desktop/names/names-app/src/nameTable.js\";\nimport React from 'react';\nimport { Box, Paper, Button, withStyles, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TableSortLabel } from '@material-ui/core';\nimport data from './resources/names';\nconst useStyles = makeStyles({\n  table: {\n    width: \"50%\"\n  },\n  paper: {\n    background: \"white\"\n  },\n  container: {\n    maxHeight: \"600px\"\n  },\n  button: {\n    padding: '30px'\n  }\n});\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nexport const NameTable = () => {\n  const classes = useStyles;\n  const names = data.names;\n  const totalAmount = 100;\n  console.log(names[0]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    height: \"90%\",\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      m: 2,\n      pt: 3,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          variant: \"outlined\",\n          color: \"primary\",\n          children: \"Order by name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          variant: \"outlined\",\n          color: \"primary\",\n          disabled: !false,\n          children: \"Order by amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          m: 2,\n          pt: 3,\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            className: classes.container,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: classes.table,\n              \"aria-label\": \"simple table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: \"Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: [names.map((s, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    children: s.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: s.amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 37\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 33\n                }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    children: \"Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: totalAmount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_c = NameTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"NameTable\");","map":{"version":3,"sources":["/Users/villetaskinen/Desktop/names/names-app/src/nameTable.js"],"names":["React","Box","Paper","Button","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TableSortLabel","data","useStyles","table","width","paper","background","container","maxHeight","button","padding","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","NameTable","classes","names","totalAmount","console","log","map","s","i","name","amount"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    Box, Paper, Button, withStyles, makeStyles, Table, TableBody, TableCell,\n    TableContainer, TableHead, TableRow, TableSortLabel\n} from '@material-ui/core';\nimport data from './resources/names'\n\n\nconst useStyles = makeStyles({\n    table: {\n        width: \"50%\",\n    },\n    paper: {\n        background: \"white\",\n    },\n    container: {\n        maxHeight: \"600px\",\n      },\n    button: {    \n        padding: '30px',   \n      },\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nexport const NameTable = () => {\n\n    const classes = useStyles;\n\n    const names = data.names;\n\n    const totalAmount = 100;\n\n    console.log(names[0]);\n\n    return (\n\n        <Box height=\"90%\"\n        width=\"100%\"\n        display=\"flex\" \n        justifyContent=\"center\"        \n        >\n<Box m={2} pt={3}>\n            <Paper className={classes.paper}>\n\n                <Button className={classes.button} variant=\"outlined\" color=\"primary\">\n                    Order by name\n    </Button>\n                <Button className={classes.button} variant=\"outlined\" color=\"primary\" disabled={!false}>\n                    Order by amount\n    </Button>\n\n    <Box m={2} pt={3}>\n\n                <TableContainer component={Paper} className={classes.container}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell>Name</StyledTableCell>\n                                <StyledTableCell align=\"right\">Amount</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {names.map((s, i) => (\n                                <TableRow key={i}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {s.name}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{s.amount}</TableCell>\n                                </TableRow>\n                            ))}\n                            <TableRow>\n                                <StyledTableCell>Total</StyledTableCell>\n                                <StyledTableCell align=\"right\">{totalAmount}</StyledTableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                </Box>\n            </Paper>\n            </Box>\n        </Box>\n    );\n};"]},"metadata":{},"sourceType":"module"}